{"ast":null,"code":"const nodemailer = require(\"nodemailer\");\n\nexport default function handlebar(req, res) {\n  console.log(\"Request\", req); // async..await is not allowed in global scope, must use a wrapper\n\n  async function main() {\n    // Generate test SMTP service account from ethereal.email\n    // Only needed if you don't have a real mail account for testing\n    let testAccount = await nodemailer.createTestAccount();\n    console.log('User', process.env.MAIL_USER); // create reusable transporter object using the default SMTP transport\n\n    let transporter = nodemailer.createTransport({\n      host: \"smtp.gmail.com\",\n      port: 587,\n      secure: false,\n      auth: {\n        user: process.env.MAIL_USER,\n        // generated ethereal user\n        pass: process.env.MAIL_PASS // generated ethereal password\n\n      }\n    }); // send mail with defined transport object\n\n    let info = await transporter.sendMail({\n      from: `${req.body[1]}`,\n      // sender address\n      to: process.env.MAIL_USER,\n      // list of receivers\n      subject: `Message from dry-john.com - ${req.body[0]}`,\n      // Subject line\n      text: `Hello from ${req.body[0]}, \\n \\n ${req.body[3]}\\n \\n Phone number ${req.body[2]}\\n\\n Email: ${req.body[1]}`,\n      // plain text body\n      html: `<h1>Hello from ${req.body[0]}</h1> \\n \\n <p>${req.body[3]}</p>\\n \\n <p>\n      Phone number ${req.body[2]}\\\n      </p>\n      <p>\n      \\n Email: ${req.body[1]}\n      </p>\n      ` // html body\n\n    });\n    console.log(\"Message sent: %s\", info.messageId); // Message sent: <b658f8ca-6296-ccf4-8306-87d57a0b4321@example.com>\n    // Preview only available when sending through an Ethereal account\n\n    console.log(\"Preview URL: %s\", nodemailer.getTestMessageUrl(info)); // Preview URL: https://ethereal.email/message/WaQKMgKddxQDoou...\n  }\n\n  main().catch(console.error);\n  res.end();\n}","map":{"version":3,"sources":["/Volumes/Studio Hard Drive/Dev_loper/dryJohn/frontend/dryjohn/src/pages/api/contact.js"],"names":["nodemailer","require","handlebar","req","res","console","log","main","testAccount","createTestAccount","process","env","MAIL_USER","transporter","createTransport","host","port","secure","auth","user","pass","MAIL_PASS","info","sendMail","from","body","to","subject","text","html","messageId","getTestMessageUrl","catch","error","end"],"mappings":"AAAA,MAAMA,UAAU,GAAGC,OAAO,CAAC,YAAD,CAA1B;;AAEA,eAAe,SAASC,SAAT,CAAmBC,GAAnB,EAAwBC,GAAxB,EAA6B;AAC1CC,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBH,GAAvB,EAD0C,CAG1C;;AACA,iBAAeI,IAAf,GAAsB;AACpB;AACA;AACA,QAAIC,WAAW,GAAG,MAAMR,UAAU,CAACS,iBAAX,EAAxB;AACJJ,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBI,OAAO,CAACC,GAAR,CAAYC,SAAhC,EAJwB,CAKpB;;AACA,QAAIC,WAAW,GAAGb,UAAU,CAACc,eAAX,CAA2B;AAC3CC,MAAAA,IAAI,EAAE,gBADqC;AAE3CC,MAAAA,IAAI,EAAE,GAFqC;AAG3CC,MAAAA,MAAM,EAAE,KAHmC;AAI3CC,MAAAA,IAAI,EAAE;AACJC,QAAAA,IAAI,EAAET,OAAO,CAACC,GAAR,CAAYC,SADd;AACyB;AAC7BQ,QAAAA,IAAI,EAAEV,OAAO,CAACC,GAAR,CAAYU,SAFd,CAEyB;;AAFzB;AAJqC,KAA3B,CAAlB,CANoB,CAgBpB;;AACA,QAAIC,IAAI,GAAG,MAAMT,WAAW,CAACU,QAAZ,CAAqB;AACpCC,MAAAA,IAAI,EAAG,GAAErB,GAAG,CAACsB,IAAJ,CAAS,CAAT,CAAY,EADe;AACZ;AACxBC,MAAAA,EAAE,EAAEhB,OAAO,CAACC,GAAR,CAAYC,SAFoB;AAET;AAC3Be,MAAAA,OAAO,EAAG,+BAA8BxB,GAAG,CAACsB,IAAJ,CAAS,CAAT,CAAY,EAHhB;AAGmB;AACvDG,MAAAA,IAAI,EAAG,cAAazB,GAAG,CAACsB,IAAJ,CAAS,CAAT,CAAY,WAAUtB,GAAG,CAACsB,IAAJ,CAAS,CAAT,CAAY,sBAAqBtB,GAAG,CAACsB,IAAJ,CAAS,CAAT,CAAY,eAActB,GAAG,CAACsB,IAAJ,CAAS,CAAT,CAAY,EAJ7E;AAIgF;AACpHI,MAAAA,IAAI,EAAG,kBAAiB1B,GAAG,CAACsB,IAAJ,CAAS,CAAT,CAAY,kBAAiBtB,GAAG,CAACsB,IAAJ,CAAS,CAAT,CAAY;AACvE,qBAAqBtB,GAAG,CAACsB,IAAJ,CAAS,CAAT,CAAY;AACjC;AACA;AACA,kBAAkBtB,GAAG,CAACsB,IAAJ,CAAS,CAAT,CAAY;AAC9B;AACA,OAX0C,CAWjC;;AAXiC,KAArB,CAAjB;AAcApB,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCgB,IAAI,CAACQ,SAArC,EA/BoB,CAgCpB;AAEA;;AACAzB,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BN,UAAU,CAAC+B,iBAAX,CAA6BT,IAA7B,CAA/B,EAnCoB,CAoCpB;AACD;;AAEDf,EAAAA,IAAI,GAAGyB,KAAP,CAAa3B,OAAO,CAAC4B,KAArB;AACA7B,EAAAA,GAAG,CAAC8B,GAAJ;AACD","sourcesContent":["const nodemailer = require(\"nodemailer\");\n\nexport default function handlebar(req, res) {\n  console.log(\"Request\", req);\n\n  // async..await is not allowed in global scope, must use a wrapper\n  async function main() {\n    // Generate test SMTP service account from ethereal.email\n    // Only needed if you don't have a real mail account for testing\n    let testAccount = await nodemailer.createTestAccount();\nconsole.log('User', process.env.MAIL_USER)\n    // create reusable transporter object using the default SMTP transport\n    let transporter = nodemailer.createTransport({\n      host: \"smtp.gmail.com\",\n      port: 587,\n      secure: false,\n      auth: {\n        user: process.env.MAIL_USER, // generated ethereal user\n        pass: process.env.MAIL_PASS, // generated ethereal password\n      },\n    });\n\n    // send mail with defined transport object\n    let info = await transporter.sendMail({\n      from: `${req.body[1]}`, // sender address\n      to: process.env.MAIL_USER, // list of receivers\n      subject: `Message from dry-john.com - ${req.body[0]}`, // Subject line\n      text: `Hello from ${req.body[0]}, \\n \\n ${req.body[3]}\\n \\n Phone number ${req.body[2]}\\n\\n Email: ${req.body[1]}`, // plain text body\n      html: `<h1>Hello from ${req.body[0]}</h1> \\n \\n <p>${req.body[3]}</p>\\n \\n <p>\n      Phone number ${req.body[2]}\\\n      </p>\n      <p>\n      \\n Email: ${req.body[1]}\n      </p>\n      `, // html body\n    });\n\n    console.log(\"Message sent: %s\", info.messageId);\n    // Message sent: <b658f8ca-6296-ccf4-8306-87d57a0b4321@example.com>\n\n    // Preview only available when sending through an Ethereal account\n    console.log(\"Preview URL: %s\", nodemailer.getTestMessageUrl(info));\n    // Preview URL: https://ethereal.email/message/WaQKMgKddxQDoou...\n  }\n\n  main().catch(console.error);\n  res.end();\n}\n"]},"metadata":{},"sourceType":"module"}