{"ast":null,"code":"import _defineProperty from \"/Volumes/Studio Hard Drive/Dev_loper/dryJohn/frontend/dryjohn/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport Prismic from \"@prismicio/client\";\nexport var apiEndpoint = \"https://dry-john.cdn.prismic.io/api/v2\";\nexport var accessToken = process.env.PRISMIC_API_TOKEN; // Client method to query documents from the Prismic repo\n\nexport var Client = function Client() {\n  var req = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  return Prismic.client(apiEndpoint, createClientOptions(req, accessToken));\n};\n\nvar createClientOptions = function createClientOptions() {\n  var req = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  var prismicAccessToken = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  var reqOption = req ? {\n    req: req\n  } : {};\n  var accessTokenOption = prismicAccessToken ? {\n    accessToken: prismicAccessToken\n  } : {};\n  return _objectSpread(_objectSpread({}, reqOption), accessTokenOption);\n};\n\nexport var linkResolver = function linkResolver(doc) {\n  if (doc.type === \"post\") {\n    return \"/post/\".concat(doc.uid);\n  }\n\n  return \"/\";\n};","map":null,"metadata":{},"sourceType":"module"}