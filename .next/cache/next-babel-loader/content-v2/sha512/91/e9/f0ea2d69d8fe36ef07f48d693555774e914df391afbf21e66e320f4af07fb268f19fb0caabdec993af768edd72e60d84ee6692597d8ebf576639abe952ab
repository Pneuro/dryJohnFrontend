{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Prismic from \"@prismicio/client\";\nexport const apiEndpoint = \"https://dry-john.cdn.prismic.io/api/v2\";\nexport const accessToken = process.env.PRISMIC_API_TOKEN; // Client method to query documents from the Prismic repo\n\nexport const Client = (req = null) => Prismic.client(apiEndpoint, createClientOptions(req, accessToken));\n\nconst createClientOptions = (req = null, prismicAccessToken = null) => {\n  const reqOption = req ? {\n    req\n  } : {};\n  const accessTokenOption = prismicAccessToken ? {\n    accessToken: prismicAccessToken\n  } : {};\n  return _objectSpread(_objectSpread({}, reqOption), accessTokenOption);\n};\n\nexport const linkResolver = doc => {\n  if (doc.type === \"post\") {\n    return `/post/${doc.uid}`;\n  }\n\n  return \"/\";\n};","map":null,"metadata":{},"sourceType":"module"}