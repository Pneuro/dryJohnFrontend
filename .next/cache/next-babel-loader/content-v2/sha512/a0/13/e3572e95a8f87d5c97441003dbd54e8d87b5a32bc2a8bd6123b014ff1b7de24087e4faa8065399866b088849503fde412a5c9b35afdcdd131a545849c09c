{"ast":null,"code":"import { PrismicClient } from \"../../lib/api\";\n\nfunction linkResolver(doc) {\n  // Pretty URLs for known types\n  if (doc.type === \"post\") {\n    return `/posts/${doc.uid}`;\n  } // Fallback for other types, in case new custom types get created\n\n\n  return `/${doc.uid}`;\n}\n\nexport default async function preview(req, res) {\n  const {\n    token: ref,\n    documentId\n  } = req.query; // Check the token parameter against the Prismic SDK\n\n  const url = await PrismicClient.getPreviewResolver(ref, documentId).resolve(linkResolver, \"/\");\n\n  if (!url) {\n    return res.status(401).json({\n      message: \"Invalid token\"\n    });\n  } // Enable Preview Mode by setting the cookies\n\n\n  res.setPreviewData({\n    ref // pass the ref to pages so that they can fetch the draft ref\n\n  }); // Redirect the user to the share endpoint from same origin. This is\n  // necessary due to a Chrome bug:\n  // https://bugs.chromium.org/p/chromium/issues/detail?id=696204\n\n  res.write(`<!DOCTYPE html><html><head><meta http-equiv=\"Refresh\" content=\"0; url=${url}\" />\n    <script>window.location.href = '${url}'</script>\n    </head>`);\n  res.end();\n}","map":{"version":3,"sources":["/Volumes/Studio Hard Drive/Dev_loper/dryJohn/frontend/dryjohn/src/pages/api/preview.js"],"names":["PrismicClient","linkResolver","doc","type","uid","preview","req","res","token","ref","documentId","query","url","getPreviewResolver","resolve","status","json","message","setPreviewData","write","end"],"mappings":"AAAA,SAASA,aAAT,QAA8B,eAA9B;;AAEA,SAASC,YAAT,CAAsBC,GAAtB,EAA2B;AACzB;AACA,MAAIA,GAAG,CAACC,IAAJ,KAAa,MAAjB,EAAyB;AACvB,WAAQ,UAASD,GAAG,CAACE,GAAI,EAAzB;AACD,GAJwB,CAMzB;;;AACA,SAAQ,IAAGF,GAAG,CAACE,GAAI,EAAnB;AACD;;AAED,eAAe,eAAeC,OAAf,CAAuBC,GAAvB,EAA4BC,GAA5B,EAAiC;AAC9C,QAAM;AAAEC,IAAAA,KAAK,EAAEC,GAAT;AAAcC,IAAAA;AAAd,MAA6BJ,GAAG,CAACK,KAAvC,CAD8C,CAG9C;;AACA,QAAMC,GAAG,GAAG,MAAMZ,aAAa,CAACa,kBAAd,CAAiCJ,GAAjC,EAAsCC,UAAtC,EAAkDI,OAAlD,CAChBb,YADgB,EAEhB,GAFgB,CAAlB;;AAKA,MAAI,CAACW,GAAL,EAAU;AACR,WAAOL,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAArB,CAAP;AACD,GAX6C,CAa9C;;;AACAV,EAAAA,GAAG,CAACW,cAAJ,CAAmB;AACjBT,IAAAA,GADiB,CACZ;;AADY,GAAnB,EAd8C,CAkB9C;AACA;AACA;;AACAF,EAAAA,GAAG,CAACY,KAAJ,CACG,yEAAwEP,GAAI;AACjF,sCAAsCA,GAAI;AAC1C,YAHE;AAMAL,EAAAA,GAAG,CAACa,GAAJ;AACD","sourcesContent":["import { PrismicClient } from \"../../lib/api\";\n\nfunction linkResolver(doc) {\n  // Pretty URLs for known types\n  if (doc.type === \"post\") {\n    return `/posts/${doc.uid}`;\n  }\n\n  // Fallback for other types, in case new custom types get created\n  return `/${doc.uid}`;\n}\n\nexport default async function preview(req, res) {\n  const { token: ref, documentId } = req.query;\n\n  // Check the token parameter against the Prismic SDK\n  const url = await PrismicClient.getPreviewResolver(ref, documentId).resolve(\n    linkResolver,\n    \"/\"\n  );\n\n  if (!url) {\n    return res.status(401).json({ message: \"Invalid token\" });\n  }\n\n  // Enable Preview Mode by setting the cookies\n  res.setPreviewData({\n    ref, // pass the ref to pages so that they can fetch the draft ref\n  });\n\n  // Redirect the user to the share endpoint from same origin. This is\n  // necessary due to a Chrome bug:\n  // https://bugs.chromium.org/p/chromium/issues/detail?id=696204\n  res.write(\n    `<!DOCTYPE html><html><head><meta http-equiv=\"Refresh\" content=\"0; url=${url}\" />\n    <script>window.location.href = '${url}'</script>\n    </head>`\n  );\n\n  res.end();\n}\n"]},"metadata":{},"sourceType":"module"}