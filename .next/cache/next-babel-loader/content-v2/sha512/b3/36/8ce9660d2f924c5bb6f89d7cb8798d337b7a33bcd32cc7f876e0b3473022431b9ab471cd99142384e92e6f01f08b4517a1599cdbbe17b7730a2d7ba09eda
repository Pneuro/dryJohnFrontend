{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Volumes/Studio Hard Drive/Dev_loper/dryJohn/frontend/dryjohn/src/pages/[uid].js\";\n//pages/[uid].js\nimport React from \"react\";\nimport { Client, linkResolver } from \"../prismic-configuration.js\";\n\nconst Post = ({\n  posts\n}) => {\n  const post = doc.data;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: RichText.asText(post.title)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: RichText.asText(post.description)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n\nexport async function getStaticProps({\n  params\n}) {\n  const client = Client();\n  const doc = await client.getByUID(\"page\", params.uid);\n  return {\n    props: {\n      doc\n    }\n  };\n}\nexport async function getStaticPaths() {\n  return {\n    // You can run a separate query here to get dynamic parameters from your documents.\n    paths: [{\n      params: {\n        uid: \"1\"\n      }\n    }, {\n      params: {\n        uid: \"2\"\n      }\n    }],\n    fallback: true\n  };\n}\nexport default Post;","map":{"version":3,"sources":["/Volumes/Studio Hard Drive/Dev_loper/dryJohn/frontend/dryjohn/src/pages/[uid].js"],"names":["React","Client","linkResolver","Post","posts","post","doc","data","RichText","asText","title","description","getStaticProps","params","client","getByUID","uid","props","getStaticPaths","paths","fallback"],"mappings":";;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,YAAjB,QAAqC,6BAArC;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAC1B,QAAMC,IAAI,GAAGC,GAAG,CAACC,IAAjB;AACA,sBACE;AAAA,4BACE;AAAA,gBAAKC,QAAQ,CAACC,MAAT,CAAgBJ,IAAI,CAACK,KAArB;AAAL;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBAAKF,QAAQ,CAACC,MAAT,CAAgBJ,IAAI,CAACM,WAArB;AAAL;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CARD;;AAUA,OAAO,eAAeC,cAAf,CAA8B;AAAEC,EAAAA;AAAF,CAA9B,EAA0C;AAC/C,QAAMC,MAAM,GAAGb,MAAM,EAArB;AACA,QAAMK,GAAG,GAAG,MAAMQ,MAAM,CAACC,QAAP,CAAgB,MAAhB,EAAwBF,MAAM,CAACG,GAA/B,CAAlB;AAEA,SAAO;AACLC,IAAAA,KAAK,EAAE;AACLX,MAAAA;AADK;AADF,GAAP;AAKD;AAED,OAAO,eAAeY,cAAf,GAAgC;AACrC,SAAO;AACL;AACAC,IAAAA,KAAK,EAAE,CAAC;AAAEN,MAAAA,MAAM,EAAE;AAAEG,QAAAA,GAAG,EAAE;AAAP;AAAV,KAAD,EAA2B;AAAEH,MAAAA,MAAM,EAAE;AAAEG,QAAAA,GAAG,EAAE;AAAP;AAAV,KAA3B,CAFF;AAGLI,IAAAA,QAAQ,EAAE;AAHL,GAAP;AAKD;AAED,eAAejB,IAAf","sourcesContent":["//pages/[uid].js\nimport React from \"react\";\nimport { Client, linkResolver } from \"../prismic-configuration.js\";\n\nconst Post = ({ posts }) => {\n  const post = doc.data;\n  return (\n    <div>\n      <h1>{RichText.asText(post.title)}</h1>\n      <h3>{RichText.asText(post.description)}</h3>\n    </div>\n  );\n};\n\nexport async function getStaticProps({ params }) {\n  const client = Client();\n  const doc = await client.getByUID(\"page\", params.uid);\n\n  return {\n    props: {\n      doc,\n    },\n  };\n}\n\nexport async function getStaticPaths() {\n  return {\n    // You can run a separate query here to get dynamic parameters from your documents.\n    paths: [{ params: { uid: \"1\" } }, { params: { uid: \"2\" } }],\n    fallback: true,\n  };\n}\n\nexport default Post;\n"]},"metadata":{},"sourceType":"module"}