{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useState, useEffect } from \"react\";\nimport Image from \"next/image\";\nexport default function SlideShow(_ref) {\n  var _ref$images = _ref.images,\n      images = _ref$images === void 0 ? [imageOne, topDown] : _ref$images,\n      _ref$interval = _ref.interval,\n      interval = _ref$interval === void 0 ? 3000 : _ref$interval;\n  return function () {\n    var _useState = useState([]),\n        thumbnails = _useState[0],\n        setThumbnails = _useState[1];\n\n    var _useState2 = useState({}),\n        previousSlideStyle = _useState2[0],\n        setPreviousSlideStyle = _useState2[1];\n\n    var _useState3 = useState(0),\n        currentSlide = _useState3[0],\n        setCurrentSlide = _useState3[1];\n\n    var _useState4 = useState({}),\n        nextSlideStyle = _useState4[0],\n        setNextSlideStyle = _useState4[1];\n\n    var _useState5 = useState({}),\n        currentSlideStyle = _useState5[0],\n        setCurrentSlideStyle = _useState5[1];\n\n    var imageOne = /*#__PURE__*/_jsx(Image, {\n      src: \"./Assets/Images/SlideshowImages/tiedup_small.png\"\n    });\n\n    useEffect(function (e) {\n      setThumbnails(images);\n      setCurrentSlideStyle({\n        backgroundImage: \"url('\" + images[currentSlide] + \"')\"\n      }, []);\n\n      if (currentSlide > 0) {\n        setPreviousSlideStyle({\n          backgroundImage: \"url('\" + images[currentSlide - 1] + \"')\"\n        }, []);\n      } else {\n        setPreviousSlideStyle({\n          backgroundImage: \"url('\" + images[images.length - 1] + \"')\"\n        }, []);\n      }\n\n      if (currentSlide === images.length - 1) {\n        setNextSlideStyle({\n          backgroundImage: \"url('\" + images[0] + \"')\"\n        }, []);\n      } else {\n        setNextSlideStyle({\n          backgroundImage: \"url('\" + images[currentSlide + 1] + \"')\"\n        }, []);\n      }\n\n      var loop = setInterval(function () {\n        if (currentSlide === images.length - 1) {\n          setCurrentSlide(0);\n        } else {\n          setCurrentSlide(currentSlide + 1);\n        }\n      }, interval);\n      return function () {\n        return clearInterval(loop);\n      };\n    }, [images, currentSlide, interval]);\n\n    function previous() {\n      if (currentSlide > 0) {\n        setCurrentSlide(currentSlide - 1);\n      } else {\n        setCurrentSlide(thumbnails.length - 1);\n      }\n    }\n\n    function next() {\n      if (currentSlide === thumbnails.length - 1) {\n        setCurrentSlide(0);\n      } else {\n        setCurrentSlide(currentSlide + 1);\n      }\n    }\n\n    return /*#__PURE__*/_jsxs(\"section\", {\n      style: styles.wrapper,\n      className: \"slideshow\",\n      children: [/*#__PURE__*/_jsx(\"h1\", {\n        style: styles.h1,\n        children: \"Product Images\"\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        className: \"slide-holder\",\n        children: [/*#__PURE__*/_jsx(\"section\", {\n          className: \"slide previous-slide\",\n          children: /*#__PURE__*/_jsx(\"div\", {\n            style: previousSlideStyle,\n            className: \"slide-thumbnail\"\n          })\n        }), /*#__PURE__*/_jsx(\"section\", {\n          className: \"slide current-slide\",\n          children: /*#__PURE__*/_jsx(\"div\", {\n            style: currentSlideStyle,\n            className: \"slide-thumbnail\"\n          })\n        }), /*#__PURE__*/_jsx(\"section\", {\n          className: \"slide next-slide\",\n          children: /*#__PURE__*/_jsx(\"div\", {\n            style: nextSlideStyle,\n            className: \"slide-thumbnail\"\n          })\n        })]\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        className: \"slideshow-controller\",\n        children: [/*#__PURE__*/_jsx(\"span\", {\n          onClick: previous,\n          children: \"Previous\"\n        }), /*#__PURE__*/_jsx(\"span\", {\n          onClick: next,\n          children: \"Next\"\n        })]\n      })]\n    });\n  }();\n}\nvar styles = {\n  wrapper: {\n    position: \"relative\",\n    zIndex: 4\n  },\n  h1: {\n    color: \"#fff\"\n  }\n};","map":null,"metadata":{},"sourceType":"module"}