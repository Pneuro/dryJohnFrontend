{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useEffect, useState } from \"react\";\nimport Prismic from \"@prismicio/client\";\nimport { Date, Link, RichText } from \"prismic-reactjs\";\nimport { Client } from \"../prismic-configuration.js\";\n\nfunction AllPosts({\n  showControls\n}) {\n  const {\n    0: posts,\n    1: setPosts\n  } = useState([{\n    id: 1\n  }, {\n    id: 2\n  }]); // Link Resolver\n\n  function linkResolver(posts) {\n    // Define the url depending on the postsument type\n    if (posts.type === \"page\") {\n      return \"/page/\" + posts.uid;\n    } else if (posts.type === \"blog_post\") {\n      return \"/blog/\" + posts.uid;\n    } // Default to homepage\n\n\n    return \"/\";\n  }\n\n  return /*#__PURE__*/_jsx(\"div\", {\n    style: styles.post,\n    children: posts.map(post => /*#__PURE__*/_jsxs(\"article\", {\n      style: styles.article,\n      children: [/*#__PURE__*/_jsx(\"h1\", {\n        children: post.title\n      }), /*#__PURE__*/_jsx(\"p\", {\n        children: post.body\n      }), /*#__PURE__*/_jsx(\"p\", {\n        children: post.image\n      }), showControls ? /*#__PURE__*/_jsxs(\"div\", {\n        children: [/*#__PURE__*/_jsx(\"button\", {\n          onClick: () => handleDelete(post.id),\n          children: \"Delete\"\n        }), /*#__PURE__*/_jsx(\"button\", {\n          onClick: () => handleEdit(post.id),\n          children: \"Edit\"\n        })]\n      }) : \"\"]\n    }, post.id))\n  });\n}\n\nexport async function getStaticProps({\n  params\n}) {\n  const client = Client();\n  const doc = await client.getByUID('page', params.uid);\n  return {\n    props: {\n      doc\n    }\n  };\n}\nconst styles = {\n  post: {\n    display: \"grid\",\n    gridTemplateColumns: \"repeat(auto-fit, minmax(300px, 1fr))\",\n    gap: \"1em\",\n    wordBreak: \"keep-all\"\n  },\n  article: {\n    maxWidth: \"500px\"\n  }\n};\nexport async function getStaticPaths() {\n  return {\n    // You can run a separate query here to get dynamic parameters from your documents.\n    paths: [{\n      params: {\n        uid: \"1\"\n      }\n    }, {\n      params: {\n        uid: \"2\"\n      }\n    }],\n    fallback: true\n  };\n}\nexport default AllPosts;","map":null,"metadata":{},"sourceType":"module"}