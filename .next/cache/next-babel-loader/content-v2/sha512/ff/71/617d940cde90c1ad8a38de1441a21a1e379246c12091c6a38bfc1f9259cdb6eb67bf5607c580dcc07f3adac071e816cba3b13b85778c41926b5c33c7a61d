{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Volumes/Studio Hard Drive/Dev_loper/dryJohn/frontend/dryjohn/src/components/AllPosts.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\n\nfunction AllPosts({\n  showControls,\n  baseUrl\n}) {\n  _s();\n\n  const {\n    0: posts,\n    1: setPosts\n  } = useState([{\n    id: 419,\n    title: \"This is a template\",\n    body: \"Template is a body\",\n    image: \"\"\n  }]);\n  useEffect(() => {\n    fetch(`${baseUrl}/get_posts`).then(res => res.json()).then(res => setPosts(res)).catch(err => console.error(err));\n  }, [baseUrl]);\n\n  const handleEdit = e => {\n    fetch(`/edit/${e}`).then(res => res.json()).then(res => console.log(res));\n  };\n\n  const handleDelete = e => {\n    fetch(`${baseUrl}/delete/${e}`);\n    console.log(e);\n  };\n\n  const styles = {\n    post: {\n      display: \"grid\",\n      gridTemplateColumns: \"repeat(auto-fit, minmax(300px, 1fr))\",\n      gap: \"1em\",\n      wordBreak: 'keep'\n    },\n    article: {\n      maxWidth: \"500px\"\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.post,\n    children: posts.map(post => /*#__PURE__*/_jsxDEV(\"article\", {\n      style: styles.article,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: post.body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: post.image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), showControls ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDelete(post.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleEdit(post.id),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this) : \"\"]\n    }, post.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AllPosts, \"TYqr+IlZBZMrspg33o+EIDhJoqA=\");\n\n_c = AllPosts;\nexport default AllPosts;\nAllPosts.defaultProps = {\n  showControls: false,\n  baseUrl: \"\"\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"AllPosts\");","map":{"version":3,"sources":["/Volumes/Studio Hard Drive/Dev_loper/dryJohn/frontend/dryjohn/src/components/AllPosts.js"],"names":["useEffect","useState","AllPosts","showControls","baseUrl","posts","setPosts","id","title","body","image","fetch","then","res","json","catch","err","console","error","handleEdit","e","log","handleDelete","styles","post","display","gridTemplateColumns","gap","wordBreak","article","maxWidth","map","defaultProps"],"mappings":";;;;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;AAEA,SAASC,QAAT,CAAkB;AAAEC,EAAAA,YAAF;AAAgBC,EAAAA;AAAhB,CAAlB,EAA6C;AAAA;;AAC3C,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBL,QAAQ,CAAC,CACjC;AACEM,IAAAA,EAAE,EAAE,GADN;AAEEC,IAAAA,KAAK,EAAE,oBAFT;AAGEC,IAAAA,IAAI,EAAE,oBAHR;AAIEC,IAAAA,KAAK,EAAE;AAJT,GADiC,CAAD,CAAlC;AASAV,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,KAAK,CAAE,GAAEP,OAAQ,YAAZ,CAAL,CACGQ,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESC,GAAD,IAASP,QAAQ,CAACO,GAAD,CAFzB,EAGGE,KAHH,CAGUC,GAAD,IAASC,OAAO,CAACC,KAAR,CAAcF,GAAd,CAHlB;AAID,GALQ,EAKN,CAACZ,OAAD,CALM,CAAT;;AAMA,QAAMe,UAAU,GAAIC,CAAD,IAAO;AACxBT,IAAAA,KAAK,CAAE,SAAQS,CAAE,EAAZ,CAAL,CACGR,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESC,GAAD,IAASI,OAAO,CAACI,GAAR,CAAYR,GAAZ,CAFjB;AAGD,GAJD;;AAKA,QAAMS,YAAY,GAAIF,CAAD,IAAO;AAC1BT,IAAAA,KAAK,CAAE,GAAEP,OAAQ,WAAUgB,CAAE,EAAxB,CAAL;AACAH,IAAAA,OAAO,CAACI,GAAR,CAAYD,CAAZ;AACD,GAHD;;AAIA,QAAMG,MAAM,GAAG;AACbC,IAAAA,IAAI,EAAE;AACJC,MAAAA,OAAO,EAAE,MADL;AAEJC,MAAAA,mBAAmB,EAAE,sCAFjB;AAGJC,MAAAA,GAAG,EAAE,KAHD;AAIJC,MAAAA,SAAS,EAAE;AAJP,KADO;AAObC,IAAAA,OAAO,EAAE;AACPC,MAAAA,QAAQ,EAAE;AADH;AAPI,GAAf;AAYA,sBACE;AAAK,IAAA,KAAK,EAAEP,MAAM,CAACC,IAAnB;AAAA,cACGnB,KAAK,CAAC0B,GAAN,CAAWP,IAAD,iBACT;AAAS,MAAA,KAAK,EAAED,MAAM,CAACM,OAAvB;AAAA,8BACE;AAAA,kBAAKL,IAAI,CAAChB;AAAV;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAIgB,IAAI,CAACf;AAAT;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA,kBAAIe,IAAI,CAACd;AAAT;AAAA;AAAA;AAAA;AAAA,cAHF,EAIGP,YAAY,gBACX;AAAA,gCACE;AAAQ,UAAA,OAAO,EAAE,MAAMmB,YAAY,CAACE,IAAI,CAACjB,EAAN,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAQ,UAAA,OAAO,EAAE,MAAMY,UAAU,CAACK,IAAI,CAACjB,EAAN,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADW,GAMX,EAVJ;AAAA,OAAqCiB,IAAI,CAACjB,EAA1C;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD;;GAxDQL,Q;;KAAAA,Q;AA0DT,eAAeA,QAAf;AAEAA,QAAQ,CAAC8B,YAAT,GAAwB;AACtB7B,EAAAA,YAAY,EAAE,KADQ;AAEtBC,EAAAA,OAAO,EAAE;AAFa,CAAxB","sourcesContent":["import { useEffect, useState } from \"react\";\n\nfunction AllPosts({ showControls, baseUrl }) {\n  const [posts, setPosts] = useState([\n    {\n      id: 419,\n      title: \"This is a template\",\n      body: \"Template is a body\",\n      image: \"\",\n    },\n  ]);\n\n  useEffect(() => {\n    fetch(`${baseUrl}/get_posts`)\n      .then((res) => res.json())\n      .then((res) => setPosts(res))\n      .catch((err) => console.error(err));\n  }, [baseUrl]);\n  const handleEdit = (e) => {\n    fetch(`/edit/${e}`)\n      .then((res) => res.json())\n      .then((res) => console.log(res));\n  };\n  const handleDelete = (e) => {\n    fetch(`${baseUrl}/delete/${e}`);\n    console.log(e);\n  };\n  const styles = {\n    post: {\n      display: \"grid\",\n      gridTemplateColumns: \"repeat(auto-fit, minmax(300px, 1fr))\",\n      gap: \"1em\",\n      wordBreak: 'keep'\n    },\n    article: {\n      maxWidth: \"500px\",\n    },\n  };\n\n  return (\n    <div style={styles.post}>\n      {posts.map((post) => (\n        <article style={styles.article} key={post.id}>\n          <h1>{post.title}</h1>\n          <p>{post.body}</p>\n          <p>{post.image}</p>\n          {showControls ? (\n            <div>\n              <button onClick={() => handleDelete(post.id)}>Delete</button>\n              <button onClick={() => handleEdit(post.id)}>Edit</button>\n            </div>\n          ) : (\n            \"\"\n          )}\n        </article>\n      ))}\n    </div>\n  );\n}\n\nexport default AllPosts;\n\nAllPosts.defaultProps = {\n  showControls: false,\n  baseUrl: \"\",\n};\n"]},"metadata":{},"sourceType":"module"}