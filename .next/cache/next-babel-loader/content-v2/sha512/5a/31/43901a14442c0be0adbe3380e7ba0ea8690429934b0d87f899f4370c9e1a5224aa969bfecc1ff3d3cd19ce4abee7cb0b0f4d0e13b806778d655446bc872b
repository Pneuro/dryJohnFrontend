{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Volumes/Studio Hard Drive/Dev_loper/dryJohn/frontend/dryjohn/src/pages/admin.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport BlogForm from \"../components/BlogForm\";\nimport AllPosts from \"../components/AllPosts\";\nimport { useState } from \"react\";\nimport Footer from \"../components/Footer\";\nimport Login from \"../components/login\";\n\nconst backendPage = ({\n  user,\n  logout\n}) => {\n  const {\n    0: login,\n    1: setLogin\n  } = useState(true);\n  const {\n    0: email,\n    1: setEmail\n  } = useState(\"\");\n  const {\n    0: password,\n    1: setPassword\n  } = useState(\"\");\n\n  const emailUpdate = e => setEmail(e.target.value);\n\n  const passwordUpdate = e => setPassword(e.target.value);\n\n  const data = [email, password];\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(data);\n    fetch(\"https:///login\", headers).then(res => res.json().then(res => {\n      console.log(res.data);\n\n      if (res.data === \"pete@dryjohn.com\") {\n        console.log(res);\n        setLoggedIn(true);\n      } else {\n        console.log(res);\n      }\n    }).catch(err => console.error(err)));\n  };\n\n  const headers = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(data)\n  };\n  const styles = {\n    wrapper: {\n      marginTop: \"100px\"\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: !login ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.wrapper,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Welcome, \", user]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => logout(),\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(BlogForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(AllPosts, {\n        showControls: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Login, {\n        handleSubmit: handleSubmit,\n        email: email,\n        password: password,\n        setEmail: setEmail,\n        setPassword: setPassword,\n        emailUpdate: emailUpdate,\n        passwordUpdate: passwordUpdate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)\n    }, void 0, false)\n  }, void 0, false);\n};\n\nbackendPage.propTypes = {\n  user: PropTypes.string\n};\nexport default backendPage;","map":{"version":3,"sources":["/Volumes/Studio Hard Drive/Dev_loper/dryJohn/frontend/dryjohn/src/pages/admin.js"],"names":["React","PropTypes","BlogForm","AllPosts","useState","Footer","Login","backendPage","user","logout","login","setLogin","email","setEmail","password","setPassword","emailUpdate","e","target","value","passwordUpdate","data","handleSubmit","preventDefault","console","log","fetch","headers","then","res","json","setLoggedIn","catch","err","error","method","body","JSON","stringify","styles","wrapper","marginTop","propTypes","string"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport BlogForm from \"../components/BlogForm\";\nimport AllPosts from \"../components/AllPosts\";\nimport { useState } from \"react\";\nimport Footer from \"../components/Footer\";\nimport Login from \"../components/login\";\nconst backendPage = ({ user, logout }) => {\n  const [login, setLogin] = useState(true);\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const emailUpdate = (e) => setEmail(e.target.value);\n  const passwordUpdate = (e) => setPassword(e.target.value);\n\n  const data = [email, password];\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(data)\n    fetch(\"https:///login\", headers).then((res) =>\n      res\n        .json()\n        .then((res) => {\n          console.log(res.data);\n          if (res.data === \"pete@dryjohn.com\") {\n            console.log(res);\n            setLoggedIn(true);\n          } else {\n            console.log(res);\n          }\n        })\n        .catch((err) => console.error(err))\n    );\n  };\n  const headers = {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify(data),\n  };\n\n  const styles = {\n    wrapper: {\n      marginTop: \"100px\",\n    },\n  };\n  return (\n    <>\n      {!login ? (\n        <div style={styles.wrapper}>\n          <h1>Welcome, {user}</h1>\n          <button onClick={() => logout()}>Logout</button>\n          <BlogForm />\n          <AllPosts showControls={true} />\n          <Footer />\n        </div>\n      ) : (\n        <>\n          <Login\n            handleSubmit={handleSubmit}\n            email={email}\n            password={password}\n            setEmail={setEmail}\n            setPassword={setPassword}\n            emailUpdate={emailUpdate}\n            passwordUpdate={passwordUpdate}\n          />\n        </>\n      )}\n    </>\n  );\n};\n\nbackendPage.propTypes = {\n  user: PropTypes.string,\n};\n\nexport default backendPage;\n"]},"metadata":{},"sourceType":"module"}